# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.coordinates import Coordinates  # noqa: F401,E501
from swagger_server.models.distance import Distance  # noqa: F401,E501
from swagger_server.models.duration import Duration  # noqa: F401,E501
from swagger_server import util


class LegProgress(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, coordinates: Coordinates=None, duration: Duration=None, distance: Distance=None):  # noqa: E501
        """LegProgress - a model defined in Swagger

        :param coordinates: The coordinates of this LegProgress.  # noqa: E501
        :type coordinates: Coordinates
        :param duration: The duration of this LegProgress.  # noqa: E501
        :type duration: Duration
        :param distance: The distance of this LegProgress.  # noqa: E501
        :type distance: Distance
        """
        self.swagger_types = {
            'coordinates': Coordinates,
            'duration': Duration,
            'distance': Distance
        }

        self.attribute_map = {
            'coordinates': 'coordinates',
            'duration': 'duration',
            'distance': 'distance'
        }
        self._coordinates = coordinates
        self._duration = duration
        self._distance = distance

    @classmethod
    def from_dict(cls, dikt) -> 'LegProgress':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The legProgress of this LegProgress.  # noqa: E501
        :rtype: LegProgress
        """
        return util.deserialize_model(dikt, cls)

    @property
    def coordinates(self) -> Coordinates:
        """Gets the coordinates of this LegProgress.


        :return: The coordinates of this LegProgress.
        :rtype: Coordinates
        """
        return self._coordinates

    @coordinates.setter
    def coordinates(self, coordinates: Coordinates):
        """Sets the coordinates of this LegProgress.


        :param coordinates: The coordinates of this LegProgress.
        :type coordinates: Coordinates
        """
        if coordinates is None:
            raise ValueError("Invalid value for `coordinates`, must not be `None`")  # noqa: E501

        self._coordinates = coordinates

    @property
    def duration(self) -> Duration:
        """Gets the duration of this LegProgress.


        :return: The duration of this LegProgress.
        :rtype: Duration
        """
        return self._duration

    @duration.setter
    def duration(self, duration: Duration):
        """Sets the duration of this LegProgress.


        :param duration: The duration of this LegProgress.
        :type duration: Duration
        """

        self._duration = duration

    @property
    def distance(self) -> Distance:
        """Gets the distance of this LegProgress.


        :return: The distance of this LegProgress.
        :rtype: Distance
        """
        return self._distance

    @distance.setter
    def distance(self, distance: Distance):
        """Sets the distance of this LegProgress.


        :param distance: The distance of this LegProgress.
        :type distance: Distance
        """

        self._distance = distance
