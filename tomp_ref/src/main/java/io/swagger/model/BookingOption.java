package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.Address;
import io.swagger.model.Customer;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 * A new booking, created by MaaS POST request in &#x27;PENDING&#x27; state. The ID is generated by the TO in the &#x27;availability-check&#x27;. The fromAddress, toAddress and the personal data should only be provided if there is an actual request for it (see conditions)
 */
@ApiModel(description = "A new booking, created by MaaS POST request in 'PENDING' state. The ID is generated by the TO in the 'availability-check'. The fromAddress, toAddress and the personal data should only be provided if there is an actual request for it (see conditions)")
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-04-23T14:08:29.073Z[GMT]")
public class BookingOption   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("customer")
  private Customer customer = null;

  @JsonProperty("fromAddress")
  private Address fromAddress = null;

  @JsonProperty("toAddress")
  private Address toAddress = null;

  public BookingOption id(String id) {
    this.id = id;
    return this;
  }

  /**
   * unique ID (TO's perspective) for identifying this specific available (type of) asset
   * @return id
  **/
  @ApiModelProperty(required = true, value = "unique ID (TO's perspective) for identifying this specific available (type of) asset")
      @NotNull

    public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public BookingOption customer(Customer customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(required = true, value = "")
      @NotNull

    @Valid
    public Customer getCustomer() {
    return customer;
  }

  public void setCustomer(Customer customer) {
    this.customer = customer;
  }

  public BookingOption fromAddress(Address fromAddress) {
    this.fromAddress = fromAddress;
    return this;
  }

  /**
   * Get fromAddress
   * @return fromAddress
  **/
  @ApiModelProperty(value = "")
  
    @Valid
    public Address getFromAddress() {
    return fromAddress;
  }

  public void setFromAddress(Address fromAddress) {
    this.fromAddress = fromAddress;
  }

  public BookingOption toAddress(Address toAddress) {
    this.toAddress = toAddress;
    return this;
  }

  /**
   * Get toAddress
   * @return toAddress
  **/
  @ApiModelProperty(value = "")
  
    @Valid
    public Address getToAddress() {
    return toAddress;
  }

  public void setToAddress(Address toAddress) {
    this.toAddress = toAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookingOption bookingOption = (BookingOption) o;
    return Objects.equals(this.id, bookingOption.id) &&
        Objects.equals(this.customer, bookingOption.customer) &&
        Objects.equals(this.fromAddress, bookingOption.fromAddress) &&
        Objects.equals(this.toAddress, bookingOption.toAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, customer, fromAddress, toAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookingOption {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    fromAddress: ").append(toIndentedString(fromAddress)).append("\n");
    sb.append("    toAddress: ").append(toIndentedString(toAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
